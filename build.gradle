buildscript {
    repositories {
        jcenter()
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = 'gradle plugins'
            url = 'https://plugins.gradle.org/m2/'
        }
        maven {
            name = 'CurseForge'
            url = 'https://minecraft.curseforge.com/api/maven/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.wynprice.cursemaven:CurseMaven:2.1.1'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.wynprice.cursemaven'

ext {

    modid = 'onslaught'

    forge = [
            version: '1.12.2-14.23.5.2847'
    ]

    mappings = [
            channel: 'snapshot',
            version: 'snapshot_20171003'
    ]

    manifest = [
            attributesEnabled: false,
            attributes       : [
                    'Specification-Title'     : 'Onslaught',
                    'Specification-Vendor'    : 'Rebirth of the Night',
                    'Specification-Version'   : '1', // We are version 1 of ourselves
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : "${version}",
                    'Implementation-Vendor'   : 'Rebirth of the Night',
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ]
    ]

    replace = []
}

def getVersionName = { String workTree ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', "--git-dir=${workTree}/.git", "--work-tree=${workTree}", 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

version = getVersionName("${project.projectDir}")
group = 'com.codetaylor.mc.' + project.ext.modid
archivesBaseName = project.ext.modid

println("-------------------------------------------------------------")
println("- Mod Id: " + project.ext.modid)
println("- Version: " + version)
println("- Forge Version: " + project.ext.forge.version)
println("- Mappings: " + project.ext.mappings.channel + " " + project.ext.mappings.version)
println("-------------------------------------------------------------")
println()

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = project.ext.forge.version
    runDir = "run"
    mappings = project.ext.mappings.version
}

repositories {
    maven {
        name = 'CurseForge'
        url = 'https://minecraft.curseforge.com/api/maven/'
    }
}

dependencies {
    deobfCompile 'athenaeum:athenaeum:1.12.2:1.19.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'org.assertj:assertj-core:3.6.2'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, that's not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

test {
    useJUnitPlatform()
}

jar {
    from sourceSets.api.output
}